// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// DeCasteljau_cpp
Rcpp::NumericMatrix DeCasteljau_cpp(Rcpp::List rsegments, Rcpp::NumericVector keyTimes, Rcpp::NumericVector times);
RcppExport SEXP _qs_DeCasteljau_cpp(SEXP rsegmentsSEXP, SEXP keyTimesSEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type rsegments(rsegmentsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type keyTimes(keyTimesSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type times(timesSEXP);
    rcpp_result_gen = Rcpp::wrap(DeCasteljau_cpp(rsegments, keyTimes, times));
    return rcpp_result_gen;
END_RCPP
}
// KochanekBartels_cpp
Rcpp::NumericMatrix KochanekBartels_cpp(Rcpp::NumericMatrix keyRotorsR, Rcpp::NumericVector keyTimes, double t, double c, double b, Rcpp::NumericVector timesR, std::size_t nintertimes, bool closed);
RcppExport SEXP _qs_KochanekBartels_cpp(SEXP keyRotorsRSEXP, SEXP keyTimesSEXP, SEXP tSEXP, SEXP cSEXP, SEXP bSEXP, SEXP timesRSEXP, SEXP nintertimesSEXP, SEXP closedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type keyRotorsR(keyRotorsRSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type keyTimes(keyTimesSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type timesR(timesRSEXP);
    Rcpp::traits::input_parameter< std::size_t >::type nintertimes(nintertimesSEXP);
    Rcpp::traits::input_parameter< bool >::type closed(closedSEXP);
    rcpp_result_gen = Rcpp::wrap(KochanekBartels_cpp(keyRotorsR, keyTimes, t, c, b, timesR, nintertimes, closed));
    return rcpp_result_gen;
END_RCPP
}
// rversor_cpp
Rcpp::NumericMatrix rversor_cpp(std::size_t n);
RcppExport SEXP _qs_rversor_cpp(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::size_t >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(rversor_cpp(n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_qs_DeCasteljau_cpp", (DL_FUNC) &_qs_DeCasteljau_cpp, 3},
    {"_qs_KochanekBartels_cpp", (DL_FUNC) &_qs_KochanekBartels_cpp, 8},
    {"_qs_rversor_cpp", (DL_FUNC) &_qs_rversor_cpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_qs(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
